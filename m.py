import telebot
import requests
import random
import string
import time

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
bot = telebot.TeleBot("YOUR_BOT_TOKEN")
CRYPTOBOT_API_KEY = "YOUR_API_TOKEN_CRYPTOBOT"
user_data = {
    "7381899082": {
        "tokens": 10000,
        "max_tokens": 10000,
        "token_regen": 0.1,
        "limit_results": 300,
        "requests_count": 29,
        "balance": 0.00,
        "withdrawal_funds": 0.00,
        "referrals": 0,
        "language": "ru",  
        "registration_date": "30.10.2024 18:29:09"
    }
}
def generate_api_key(user_id):
    letters = ''.join(random.choice(string.ascii_letters) for _ in range(2))
    digit = random.choice(string.digits)
    random_letters = ''.join(random.choice(string.ascii_letters) for _ in range(5))
    api_key = f"{user_id}:{letters}{digit}{random_letters}"
    return api_key
def generate_payment_link(user_id, currency):
    url = "https://pay.crypt.bot/api/createInvoice"
    headers = {
        "Crypto-Pay-API-Token": CRYPTOBOT_API_KEY
    }
    payload = {
        "asset": currency,  
        "amount": "1",  
        "description": f"–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}",
        "payload": f"user_id_{user_id}"  
    }
    response = requests.post(url, headers=headers, json=payload)
    if response.status_code == 200:
        data = response.json()
        return data.get("result", {}).get("invoice_url")
    else:
        return None
def make_request(Term):
    API = "–¢–£–¢ –ê–ü–ò –õ–ò–ö –û–°–ò–ù–¢"
    data = {"token": API, "request": Term, "limit": 100, "lang": "ru"}
    url = 'https://server.leakosint.com/'
    response = requests.post(url, json=data, verify=False)
    return response.json()
@bot.message_handler(commands=['start'])
def send_welcome(message):
    text = "üïµ –Ø –º–æ–≥—É –∏—Å–∫–∞—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤—Å—ë. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å."
    keyboard = telebot.types.InlineKeyboardMarkup()
    search_button = telebot.types.InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫", callback_data='search')
    info_button = telebot.types.InlineKeyboardButton(text="üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data='info')
    shop_button = telebot.types.InlineKeyboardButton(text="üõç –ú–∞–≥–∞–∑–∏–Ω", callback_data='shop')
    keyboard.row(search_button, info_button, shop_button)
    settings_button = telebot.types.InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data='settings')
    menu_button = telebot.types.InlineKeyboardButton(text="üóÉ –ú–µ–Ω—é", callback_data='menu')
    keyboard.row(settings_button, menu_button)
    bot.send_message(message.chat.id, text, reply_markup=keyboard)
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        user_id = call.from_user.id  
        user_name = call.from_user.first_name  
        user_username = call.from_user.username 

        if call.data == 'search':
            search_text = (
                "–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–∫–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:\n"
                "üìß–ü–æ–∏—Å–∫ –ø–æ –ø–æ—á—Ç–µ\n"
                "‚îú example@gmail.com - –ø–æ–∏—Å–∫ –ø–æ—á—Ç—ã\n"
                "‚îú example@ - –ø–æ–∏—Å–∫ –±–µ–∑ —É—á—ë—Ç–∞ –¥–æ–º–µ–Ω–∞\n"
                "‚îî @gmail.com - –ø–æ–∏—Å–∫ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤.\n\n"
                "üë§–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ –Ω–∏–∫—É\n"
                "‚îú –ü–µ—Ç—Ä–æ–≤\n"
                "‚îú –ü–µ—Ç—Ä–æ–≤ –ú–∞–∫—Å–∏–º\n"
                "‚îú –ü–µ—Ç—Ä–æ–≤ –°–µ—Ä–≥–µ–µ–≤–∏—á\n"
                "‚îú –ú–∞–∫—Å–∏–º –°–µ—Ä–≥–µ–µ–≤–∏—á\n"
                "‚îú –ü–µ—Ç—Ä–æ–≤ –ú–∞–∫—Å–∏–º –°–µ—Ä–≥–µ–µ–≤–∏—á\n"
                "‚îî ShadowPlayer228\n\n"
                "üì±–ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
                "‚îú +79002206090\n"
                "‚îú 79002206090\n"
                "‚îî 89002206090\n\n"
                "üîë–ü–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–æ–ª—é\n"
                "‚îî 123qwe\n\n"
                "üöó–ü–æ–∏—Å–∫ –ø–æ –∞–≤—Ç–æ\n"
                "‚îú O999–ú–£777 - –ø–æ–∏—Å–∫ –∞–≤—Ç–æ –ø–æ –†–§\n"
                "‚îú –í–û4561–ê–• - –ø–æ–∏—Å–∫ –∞–≤—Ç–æ –ø–æ –£–ö\n"
                "‚îî XTA21150053965897 - –ø–æ–∏—Å–∫ –ø–æ VIN\n\n"
                "‚úà–ü–æ–∏—Å–∫ —Ç–µ–ª–µ–≥—Ä–∞–º-–∞–∫–∫–∞—É–Ω—Ç–∞\n"
                "‚îú Petrov Ivan - –ø–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏\n"
                "‚îú 314159265 - –ø–æ–∏—Å–∫ –ø–æ ID –∞–∫–∫–∞—É–Ω—Ç–∞\n"
                "‚îî Petivan - –ø–æ–∏—Å–∫ –ø–æ —é–∑–µ—Ä–Ω–µ–∏–º—É. –°–æ–±–∞–∫–∞ –ø–µ—Ä–µ–¥ —é–∑–µ—Ä–Ω–µ–∏–º–æ–º –Ω–µ —Å—Ç–∞–≤–∏—Ç—Å—è!\n\n"
                "üìò–ü–æ–∏—Å–∫ —Ñ–µ–π—Å–±—É–∫-–∞–∫–∫–∞—É–Ω—Ç–∞\n"
                "‚îú Petrov Ivan - –ø–æ–∏—Å–∫ –ø–æ –§–ò–û\n"
                "‚îî 314159265 - –ø–æ–∏—Å–∫ –ø–æ ID –∞–∫–∫–∞—É–Ω—Ç–∞\n\n"
                "üåü–ü–æ–∏—Å–∫ –∞–∫–∫–∞—É–Ω—Ç–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ\n"
                "‚îú Petrov Ivan - –ø–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏\n"
                "‚îî 314159265 - –ø–æ–∏—Å–∫ –ø–æ ID –∞–∫–∫–∞—É–Ω—Ç–∞\n\n"
                "üåü–ü–æ–∏—Å–∫ –∞–∫–∫–∞—É–Ω—Ç–∞ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–º\n"
                "‚îú Petrov Ivan - –ø–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏\n"
                "‚îî 314159265 - –ø–æ–∏—Å–∫ –ø–æ ID –∞–∫–∫–∞—É–Ω—Ç–∞\n\n"
                "üåü–ü–æ–∏—Å–∫ –ø–æ IP\n"
                "‚îî 127.0.0.1\n\n"
                "üìÉ–ü–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª—É. –ö–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-8. –û–¥–∏–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ.\n\n"
                "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å–æ—Å—Ç–∞–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –ª—é–±—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö:\n"
                "‚îú –ü–µ—Ç—Ä–æ–≤ 79002206090 \n"
                "‚îú –ú–∞–∫—Å–∏–º –°–µ—Ä–≥–µ–µ–≤–∏—á 127.0.0.1\n"
                "‚îú ShadowPlayer228 example@gmail.com\n"
                "‚îú –ú–∞–∫—Å–∏–º –°–µ—Ä–≥–µ–µ–≤–∏—á –ú–æ—Å–∫–≤–∞\n"
                "‚îú example@gmail.com 123qwe\n"
                "‚îî ShadowPlayer228 16.08.1994\n\n"
                "–¢–∞–∫ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–∫–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–∑—É –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –∑–∞–ø—Ä–æ—Å–∞–º. –î–ª—è —ç—Ç–æ–≥–æ —É–∫–∞–∂–∏—Ç–µ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –∏ –æ–Ω–∏ –≤—ã–ø–æ–ª–Ω—è—Ç—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ."
            )
            back_keyboard = telebot.types.InlineKeyboardMarkup()
            back_button = telebot.types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_menu')
            back_keyboard.row(back_button)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=search_text, reply_markup=back_keyboard)

        elif call.data == 'settings':
            settings_keyboard = telebot.types.InlineKeyboardMarkup()
            language_button = telebot.types.InlineKeyboardButton(text="üåê –Ø–∑—ã–∫", callback_data='language')
            notifications_button = telebot.types.InlineKeyboardButton(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data='notifications')
            back_button = telebot.types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_menu')
            settings_keyboard.row(language_button, notifications_button)
            settings_keyboard.row(back_button)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", reply_markup=settings_keyboard)

        elif call.data == 'language':
            language_text = (
                "–í–∞—à —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ - ¬´ru¬ª. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —è–∑—ã–∫ –≤ —Å–ø–∏—Å–∫–µ, –ª–∏–±–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /language code.\n"
                "–í–º–µ—Å—Ç–æ \"code\" –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–¥ –ª—é–±–æ–≥–æ —è–∑—ã–∫–∞, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–≥–æ Google-–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º. –°–ø–∏—Å–æ–∫ –∫–æ–¥–æ–≤ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤–æ—Ç —Ç—É—Ç: https://cloud.google.com/translate/docs/languages"
            )
            language_keyboard = telebot.types.InlineKeyboardMarkup()
            row1 = [telebot.types.InlineKeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π‚úîÔ∏è", callback_data='lang_ru'),
                    telebot.types.InlineKeyboardButton(text="üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", callback_data='lang_uk'),
                    telebot.types.InlineKeyboardButton(text="üáßüáæ –ë–µ–ª–∞—Ä—É—Å–∫–∞—è", callback_data='lang_be')]
            row2 = [telebot.types.InlineKeyboardButton(text="üá¨üáß English", callback_data='lang_en'),
                    telebot.types.InlineKeyboardButton(text="üá©üá™ Deutsch", callback_data='lang_de'),
                    telebot.types.InlineKeyboardButton(text="üá´üá∑ Fran√ßais", callback_data='lang_fr')]
            row3 = [telebot.types.InlineKeyboardButton(text="üáπüá∑ T√ºrk√ße", callback_data='lang_tr'),
                    telebot.types.InlineKeyboardButton(text="üá™üá∏ Espa√±ol", callback_data='lang_es'),
                    telebot.types.InlineKeyboardButton(text="üáÆüáπ Italiano", callback_data='lang_it')]
            row4 = [telebot.types.InlineKeyboardButton(text="üá®üá≥ ‰∏≠Êñá", callback_data='lang_zh'),
                    telebot.types.InlineKeyboardButton(text="üáØüáµ Êó•Êú¨Ë™û", callback_data='lang_ja'),
                    telebot.types.InlineKeyboardButton(text="üá∞üá∑ ÌïúÍµ≠Ïñ¥", callback_data='lang_ko')]
            back_button = telebot.types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_settings')

            language_keyboard.row(*row1)
            language_keyboard.row(*row2)
            language_keyboard.row(*row3)
            language_keyboard.row(*row4)
            language_keyboard.row(back_button)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=language_text, reply_markup=language_keyboard)

        elif call.data.startswith('lang_'):
            selected_language = call.data.split('_')[1]
            user_data[str(user_id)]['language'] = selected_language  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫
            bot.answer_callback_query(call.id, text=f"–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {selected_language}")
            callback_inline(call)  
        elif call.data == 'notifications':
            notifications_text = "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω—É–∂–Ω–æ –≤–∞–º –ø—Ä–∏—Å—ã–ª–∞—Ç—å"
            notifications_keyboard = telebot.types.InlineKeyboardMarkup()
            leak_button = telebot.types.InlineKeyboardButton(text="‚úÖÔ∏è –ù–æ–≤—ã–µ —É—Ç–µ—á–∫–∏", callback_data='leak_notifications')
            news_button = telebot.types.InlineKeyboardButton(text="‚úÖÔ∏è –ù–æ–≤–æ—Å—Ç–∏", callback_data='news_notifications')
            referral_button = telebot.types.InlineKeyboardButton(text="‚úÖÔ∏è –ù–æ–≤—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã", callback_data='referral_notifications')
            refill_button = telebot.types.InlineKeyboardButton(text="‚úÖÔ∏è –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤", callback_data='refill_notifications')
            back_button = telebot.types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_settings')
            notifications_keyboard.row(leak_button)
            notifications_keyboard.row(news_button)
            notifications_keyboard.row(referral_button)
            notifications_keyboard.row(refill_button)
            notifications_keyboard.row(back_button)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=notifications_text, reply_markup=notifications_keyboard)

        elif call.data == 'menu':
            menu_text = "–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"
            menu_keyboard = telebot.types.InlineKeyboardMarkup()
            file_search_button = telebot.types.InlineKeyboardButton(text="üìù –ü–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª–∞–º", callback_data='file_search')
            api_button = telebot.types.InlineKeyboardButton(text="‚öôÔ∏è API", callback_data='api')
            faq_button = telebot.types.InlineKeyboardButton(text="‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data='faq')
            db_list_button = telebot.types.InlineKeyboardButton(text="üóÉ –°–ø–∏—Å–æ–∫ –±–∞–∑", callback_data='db_list')
            refill_balance_button = telebot.types.InlineKeyboardButton(text="üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞", callback_data='refill_balance')
            withdraw_button = telebot.types.InlineKeyboardButton(text="üí≥ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤", callback_data='withdraw')
            referral_system_button = telebot.types.InlineKeyboardButton(text="üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", callback_data='referral_system')
            mirror_button = telebot.types.InlineKeyboardButton(text="ü™û –°–æ–∑–¥–∞—Ç—å –∑–µ—Ä–∫–∞–ª–æ", callback_data='mirror')
            delete_button = telebot.types.InlineKeyboardButton(text="üö´ –£–¥–∞–ª–∏—Ç—å —Å–µ–±—è", callback_data='delete_self')
            back_button = telebot.types.InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_menu')
            menu_keyboard.row(file_search_button, api_button)
            menu_keyboard.row(faq_button, db_list_button)
            menu_keyboard.row(refill_balance_button, withdraw_button)
            menu_keyboard.row(referral_system_button, mirror_button)
            menu_keyboard.row(delete_button)
            menu_keyboard.row(back_button)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=menu_text, reply_markup=menu_keyboard)

        elif call.data == 'file_search':
            file_search_text = (
                "üíØ –ù–∞—à —Å–µ—Ä–≤–∏—Å –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–æ—Ç–Ω–∏ —Ç—ã—Å—è—á –ø–æ–∏—Å–∫–æ–≤ –∑–∞ —Ä–∞–∑!\n\n"
                "üìÉ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –Ω–∞–ø–∏—Å–∞–Ω –æ–¥–∏–Ω –∑–∞–ø—Ä–æ—Å.\n"
                "‚úâ –ë–æ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç –∏—Ö –≤—Å–µ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.\n"
                "üëõ –¶–µ–Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ - 1$ –∑–∞ 1000 —Å–ª–æ–≤.\n\n"
                "üÜì –ü–µ—Ä–≤–∞—è 1000 –∑–∞–ø—Ä–æ—Å–æ–≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ."
            )
            back_keyboard = telebot.types.InlineKeyboardMarkup()
            back_button = telebot.types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_menu')
            back_keyboard.row(back_button)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=file_search_text, reply_markup=back_keyboard)

        elif call.data == 'api':
            api_key = generate_api_key(user_id)
            api_text = (
                "‚öô –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º —á–µ—Ä–µ–∑ API.\n"
                f"üîë –í–æ—Ç –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π API-–∫–ª—é—á, –¥–µ—Ä–∂–∏—Ç–µ –µ–≥–æ –≤ —Å–µ–∫—Ä–µ—Ç–µ:\n{api_key}"
            )
            api_keyboard = telebot.types.InlineKeyboardMarkup()
            change_api_button = telebot.types.InlineKeyboardButton(text="üñä –ò–∑–º–µ–Ω–∏—Ç—å API-–∫–ª—é—á", callback_data='change_api_key')
            docs_button = telebot.types.InlineKeyboardButton(text="–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", url="https://leakosint.com/api")
            back_button = telebot.types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_menu')
            api_keyboard.row(change_api_button, docs_button)
            api_keyboard.row(back_button)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=api_text, reply_markup=api_keyboard)

        elif call.data == 'change_api_key':
            new_api_key = generate_api_key(user_id)
            new_api_text = (
                "‚öô –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º —á–µ—Ä–µ–∑ API.\n"
                f"üîë –í–æ—Ç –≤–∞—à –Ω–æ–≤—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π API-–∫–ª—é—á, –¥–µ—Ä–∂–∏—Ç–µ –µ–≥–æ –≤ —Å–µ–∫—Ä–µ—Ç–µ:\n{new_api_key}"
            )
            api_keyboard = telebot.types.InlineKeyboardMarkup()
            change_api_button = telebot.types.InlineKeyboardButton(text="üñä –ò–∑–º–µ–Ω–∏—Ç—å API-–∫–ª—é—á", callback_data='change_api_key')
            docs_button = telebot.types.InlineKeyboardButton(text="–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", url="https://leakosint.com/api")
            back_button = telebot.types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_menu')
            api_keyboard.row(change_api_button, docs_button)
            api_keyboard.row(back_button)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=new_api_text, reply_markup=api_keyboard)

        elif call.data == 'db_list':
            db_list_text = (
                "üíß –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –Ω–∞—à –±–æ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–æ 3017 —É—Ç–µ—á–µ–∫.\n"
                "‚úèÔ∏è –°—É–º–º–∞—Ä–Ω–æ –≤ –Ω–∏—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è 69.188.427.028 –∑–∞–ø–∏—Å–µ–π.\n"
                "üò≤ –≠—Ç–æ –±–æ–ª—å—à–µ, —á–µ–º –≤ –ª—é–±–æ–º –¥—Ä—É–≥–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–µ!\n\n"
                "üîé –î–ª—è –ø–æ–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:\n"
                "üì©Email:                   24.335.322.638\n"
                "üë§–§–ò–û:                     11.236.237.607\n"
                "üîë–ü–∞—Ä–æ–ª—å:                  11.161.673.768\n"
                "üìû–¢–µ–ª–µ—Ñ–æ–Ω:                 9.324.230.153\n"
                "üë§–ù–∏–∫:                     4.826.634.160\n"
                "üÉè–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞:         3.009.829.885\n"
                "üÜîVK ID:                   1.819.611.354\n"
                "‚ìïFacebookID:               829.607.856\n"
                "üéØIP:                      684.733.772\n"
                "üî¢SSN:                     651.615.996\n"
                "üöò–ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä:     405.358.873\n"
                "üîó–°—Å—ã–ª–∫–∞:                  319.497.568\n"
                "üè¢–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏:       299.564.297\n"
                "‚úàTelegramID:              154.974.753\n"
                "üåê–î–æ–º–µ–Ω:                   84.443.741\n"
                "üì∑–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä Instagram: 45.090.607"
            )
            db_list_keyboard = telebot.types.InlineKeyboardMarkup()
            full_list_button = telebot.types.InlineKeyboardButton(text="üí¶ –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —É—Ç–µ—á–µ–∫", callback_data='full_db_list')
            back_button = telebot.types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_menu')
            db_list_keyboard.row(full_list_button)
            db_list_keyboard.row(back_button)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=db_list_text, reply_markup=db_list_keyboard)

        elif call.data == 'full_db_list':
            with open("database_list.html", "rb") as file:
                bot.send_document(call.message.chat.id, file, caption="‚ùó –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —É—Ç–µ—á–∫–µ –º–æ–∂–µ—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–ø–∏—Å–µ–π –≤ –æ–ø–∏—Å–∞–Ω–∏–∏. –≠—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –∏–Ω–æ–≥–¥–∞ –º—ã –∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–µ—Ä—Å–∏–π –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –±–∞–∑—ã. –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –∏ –≤–µ—Ä—Å–∏—é —Å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–æ–ª—è–º–∏. –¢–∞–∫ –∂–µ –±–∞–∑—ã –º–æ–≥—É—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–∞–±–ª–∏—Ü (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –∑–∞–∫–∞–∑—ã), —á—Ç–æ —Ç–∞–∫ –∂–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π.")

        elif call.data == 'refill_balance':
            refill_text = "üí∏ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã"
            refill_keyboard = telebot.types.InlineKeyboardMarkup()
            usdt_button = telebot.types.InlineKeyboardButton(text="‚ö™ USDT", callback_data='refill_usdt')
            ton_button = telebot.types.InlineKeyboardButton(text="üü£ TON", callback_data='refill_ton')
            solana_button = telebot.types.InlineKeyboardButton(text="üü¢ Solana", callback_data='refill_solana')
            bitcoin_button = telebot.types.InlineKeyboardButton(text="üî¥ Bitcoin", callback_data='refill_bitcoin')
            back_button = telebot.types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_menu')
            refill_keyboard.row(usdt_button, ton_button)
            refill_keyboard.row(solana_button, bitcoin_button)
            refill_keyboard.row(back_button)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=refill_text, reply_markup=refill_keyboard)

        elif call.data.startswith('refill_'):
            currency = call.data.split('_')[1].upper()
            payment_link = generate_payment_link(user_id, currency)

            if payment_link:
                payment_text = (
                    f"üëõ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥—Ä–µ—Å –Ω–∏–∂–µ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞.\n\n"
                    f"–ú–æ–Ω–µ—Ç–∞: ü™∂ {currency}\n\n"
                    f"{payment_link}\n\n"
                    f"üí≥ –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –ª—é–±—É—é —Å—É–º–º—É –Ω–∞ —ç—Ç—É —Å—Å—ã–ª–∫—É. –û–Ω–∞ –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∞ –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–π.\n\n"
                    f"‚ö†Ô∏è–î–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –µ—â—ë 60 –º–∏–Ω—É—Ç."
                )
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=payment_text)
            else:
                bot.answer_callback_query(call.id, text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

        elif call.data == 'back_to_settings':
            callback_inline(call)

        elif call.data == 'back_to_menu':
            send_welcome(call.message)

        elif call.data == 'withdraw':
            user_balance = user_data.get(str(user_id), {}).get("balance", 0.00)

            withdraw_text = (
                "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ 5$\n"
                f"üí± –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –¥–ª—è –≤—ã–≤–æ–¥–∞: {user_balance}$ ( {user_balance * 103.6} ‚ÇΩ )\n"  # –ü—Ä–∏–º–µ—Ä –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ —Ä—É–±–ª–∏
                "üíµ –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤—ã–≤–æ–¥–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –¥–µ–Ω—å–≥–∏, –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤."
            )

            withdraw_keyboard = telebot.types.InlineKeyboardMarkup()
            bank_card_button = telebot.types.InlineKeyboardButton(text="üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞", callback_data='withdraw_bank_card')
            cryptobot_button = telebot.types.InlineKeyboardButton(text="üëõ CryptoBot", callback_data='withdraw_cryptobot')
            referral_system_button = telebot.types.InlineKeyboardButton(text="üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", c    markup.add("üîç SEARCH", "üòá MY PROFILE")
    markup.add("ü§ñ BOT CLONE", "üõ† SUPPORT")
    bot.send_message(
        user_id,
        "üëã ùêñùêÑùêãùêÇùêéùêåùêÑ ùêìùêé ùêëùêîùêÉùêé-ùêàùêçùêÖùêé ùêÅùêéùêì\nPlease choose an option below:",
        reply_markup=markup
    )

# =============================
# START COMMAND
# =============================
@bot.message_handler(commands=['start'])
def start(message):
    if is_muted(message.from_user.id):
        bot.reply_to(message, "‚õî You are muted for 1 day.")
        return

    force_join_check(message)

# =============================
# SEARCH OPTION
# =============================
@bot.message_handler(func=lambda m: m.text == "üîç SEARCH")
def search_start(message):
    bot.send_message(message.chat.id, "üì± Enter number without +91 (e.g. 7202936606)")
    bot.register_next_step_handler(message, do_search)

def do_search(message):
    user_id = message.from_user.id
    if is_muted(user_id):
        bot.reply_to(message, "‚õî You are muted for 1 day.")
        return

    credits, today = check_credits(user_id)
    if credits <= 0:
        mute_user(user_id)
        bot.reply_to(message, "‚ö†Ô∏è Daily search limit reached. You are muted for 1 day.")
        return

    number = message.text.strip()
    if not number.isdigit():
        bot.reply_to(message, "‚ùå Invalid format. Digits only without +91.")
        return

    try:
        res = requests.get(f"{API_URL}?api_key={API_KEY}&mobile={number}", timeout=10).json()
        if not res.get("success"):
            bot.reply_to(message, f"‚ö†Ô∏è API returned error: {res.get('message')}")
            return

        data_list = res.get("data", [])
        if not data_list:
            bot.reply_to(message, "‚ùå No record found.")
            return

        msg = f"üì± ùêëùêûùê¨ùêÆùê•ùê≠ for {number}:\n\n"
        for idx, record in enumerate(data_list, start=1):
            msg += f"{idx}Ô∏è‚É£ Record:\n"
            msg += f"‚Ä¢ üë§ Name: {record.get('name','N/A')}\n"
            if record.get('fname'):
                msg += f"‚Ä¢ üßë Father Name: {record.get('fname')}\n"
            msg += f"‚Ä¢ üè† Address: {record.get('address','N/A')}\n"
            msg += f"‚Ä¢ üìç Circle: {record.get('circle','N/A')}\n"
            msg += f"‚Ä¢ üîé Found In: {record.get('found_in','N/A')}\n\n"

        bot.send_message(user_id, msg)
        update_credits(user_id, credits - 1, today)

        with open(LOG_FILE, "a", encoding="utf-8") as f:
            f.write(f"{user_id} searched {number} at {datetime.datetime.now()}\n")

    except Exception as e:
        bot.reply_to(message, f"‚ùå API Error: {e}")

# =============================
# MY PROFILE
# =============================
@bot.message_handler(func=lambda m: m.text == "üòá MY PROFILE")
def my_profile(message):
    user_id = message.from_user.id
    credits, _ = check_credits(user_id)
    clone_count = len(load_data(CLONE_LOG))
    referral_link = f"https://t.me/YOUR_BOT?start={user_id}"

    msg = f"üòá ùêòùê®ùêÆùê´ ùêèùê´ùê®ùêüùê¢ùê•ùêû:\n\n"
    msg += f"‚Ä¢ üë§ User ID: {user_id}\n"
    msg += f"‚Ä¢ üí∞ Credits: {credits}\n"
    msg += f"‚Ä¢ ü§ñ Clone Bots: {clone_count}\n"
    msg += f"‚Ä¢ üîó Referral Link: {referral_link}\n"

    bot.reply_to(message, msg)

# =============================
# BOT CLONE (Multi-threaded)
# =============================
def run_clone_bot(token):
    clone_bot = telebot.TeleBot(token)

    @clone_bot.message_handler(commands=['start'])
    def start_clone(message):
        clone_bot.reply_to(message, "üëã Clone Bot is running!")

    @clone_bot.message_handler(func=lambda m: True)
    def handle_message(message):
        clone_bot.reply_to(message, f"Echo: {message.text}")

    clone_bot.polling()

@bot.message_handler(func=lambda m: m.text == "ü§ñ BOT CLONE")
def bot_clone(message):
    bot.send_message(message.chat.id, "‚ö†Ô∏è Enter your bot token to clone features (Example: 1234:ABC-XYZ)")
    bot.register_next_step_handler(message, process_clone)

def process_clone(message):
    token = message.text.strip()
    username = message.from_user.username or "NoUsername"

    with open(CLONE_LOG, "a", encoding="utf-8") as f:
        f.write(f"{username} | {token} at {datetime.datetime.now()}\n")

    bot.reply_to(message, f"‚úÖ Clone token saved for {username}")

    # Start clone bot in new thread
    threading.Thread(target=run_clone_bot, args=(token,), daemon=True).start()

# =============================
# SUPPORT
# =============================
@bot.message_handler(func=lambda m: m.text == "üõ† SUPPORT")
def support(message):
    bot.reply_to(message, "üõ† For support contact: @RUDOWNER")

# =============================
# ADMIN /CREDIT COMMAND
# =============================
@bot.message_handler(commands=['credit'])
def admin_credit(message):
    if message.from_user.id not in ADMIN_IDS:
        return
    try:
        _, amount, uid = message.text.split()
        update_credits(uid, int(amount), datetime.date.today().isoformat())
        bot.reply_to(message, f"Credits updated! {amount} points added to user {uid}.")
    except Exception as e:
        bot.reply_to(message, f"‚ùå Error: {e}")

# =============================
# RUN MAIN BOT
# =============================
bot.polling()
